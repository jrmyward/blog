upstream unicorn {
  server unix:/tmp/unicorn.<%= application %>.sock fail_timeout=0;
}

server {
  listen 80 default deferred;
  access_log  <%= nginx_access_log %>;
  error_log   <%= nginx_error_log %> error;
  expires     off;
  root <%= current_path %>/public;
  server_name jrmyward.com www.jrmyward.com;

  ## Size Limits
  #client_body_buffer_size   8k;
  #client_header_buffer_size 1k;
  client_max_body_size      4G;
  #large_client_header_buffers 4 4k/8k;

  ## Timeouts
  #client_body_timeout     60;
  #client_header_timeout   60;
  keepalive_timeout        10;
  #send_timeout            60;

  ## General Options
  charset                 utf-8;

  ## Compression
  gzip                 on;
  gzip_static          on;
  #gzip_buffers      16 8k;
  #gzip_http_version   1.0;
  #gzip_comp_level       1;
  #gzip_min_length     100;
  #gzip_types        text/plain text/html text/css image/x-icon image/gif;
  gzip_vary            on;

  ## Note: if{} sections are expensive to process. Please only use them if you need them
  ## and take a look lower down on the page for our discussion of if{} statements.

  ## Only allow GET and HEAD request methods. By default Nginx blocks
  ## all requests type other then GET and HEAD for static content.
  # if ($request_method !~ ^(GET|HEAD)$ ) {
  #   return 405;
  # }

  ## Deny illegal Host headers.
  # if ($host !~* ^(jrmyward.com|www.jrmyward.com)$ ) {
  #  return 405;
  # }

  ## Deny certain User-Agents (case insensitive)
  ## The ~* makes it case insensitive as opposed to just a ~
  # if ($http_user_agent ~* (Baiduspider|Jullo) ) {
  #  return 405;
  # }

  ## Deny certain Referers (case insensitive)
  ## The ~* makes it case insensitive as opposed to just a ~
  # if ($http_referer ~* (babes|click|diamond|forsale|girl|jewelry|love|nudit|organic|poker|porn|poweroversoftware|sex|teen|video|webcam|zippo) ) {
  #  return 405;
  # }

  ## Redirect from www to non-www
  if ($host = 'www.jrmyward.com' ) {
    rewrite  ^/(.*)$  http://jrmyward.com/$1  permanent;
  }

  ## Stop Image and Document Hijacking
  # location ~* (\.jpg|\.gif|\.png|\.css)$ {
  #   if ($http_referer !~ ^(http://jrmyward.com) ) {
  #     return 404;
  #   }
  # }

  ## Contact page access restricted to jrmyward.com referer. You may want to
  ## restrict access to a page to only those clients who clicked on the link from
  ## your site. A common setup is to only allow access to your contacts page if the
  ## user came from a link on one of your pages. This may stop some spam.
  # location ~* contact_us\.html {
  #    if ($http_referer !~ ^(http://jrmyward.com) ) {
  #       return 403;
  #    }
  # }

  ## Restricted Access directory with password in access_list
  # location ^~ /secure/ {
  #       allow 127.0.0.1/32;
  #       allow 10.10.10.0/24;
  #       deny all;
  #       auth_basic "RESTRICTED ACCESS";
  #       auth_basic_user_file /var/www/htdocs/secure/access_list;
  #   }

  location ^~ /assets/ {
    gzip_static on;
    expires 1y;
    add_header Cache-Control public;
    add_header ETag "";
    break;
  }

  # This block will catch static file requests, such as images, css, js
  # The ?: prefix is a 'non-capturing' mark, meaning we do not require
  # the pattern to be captured into $1 which should help improve performance
  location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    # Some basic cache-control for static files to be sent to the browser
    gzip          on;
    gzip_static   on;
    expires max;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }

  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn;
  }

  ## All server errors get the generic error page
  error_page 500 502 503 504 /500.html;

}
