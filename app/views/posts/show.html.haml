- content_for :title,  @post.title
- content_for :description, @post.description
- content_for :og_url, request.original_url
- content_for :og_image, "#{image_url @post.image.medium}" if @post.image?
- content_for :meta_author, @post.author.full_name
- content_for :meta_twitter_creator, @post.author.twitter_handle

/ = render partial: "shared/page_title", locals: {title: @post.title, icon_class: "ico-pencil"}
- content_for :content_top do
  #page-title.page-title-hero
    .hero-image.post-hero{style: "background-image: url(#{@post.image.large});"}
    #page-title-inner
      .container
        %h1.text-center
          = @post.title
.row
  .span8
    .post.post-page
      .post-meta.clearfix
        %ul.post-meta-items.clearfix
          %li
            %i.mini-ico-user>
            By #{link_to_author(@post.author)}
          %li
            %i.mini-ico-calendar>
            On #{@post.published_at.strftime("%d %B, %Y")}
        .post-social.share-top
          .addthis_responsive_sharing
      %span.post-icon.standard
        %i.ico-pen.circle
      .post-content
        / .post-title
        /   %h2= @post.title.titleize
        .post-description
          = markdown_render(@post.body)
        .post-meta.clearfix
          .post-social.share-bottom
            .addthis_responsive_sharing
          %ul.post-meta-items.clearfix
            %li
              %i.mini-ico-user>
              By #{link_to_author(@post.author)}
            %li
              %i.mini-ico-calendar>
              On #{@post.published_at.strftime("%d %B, %Y")}
            - if @post.tag_list.count > 0
              %li
                %i.mini-ico-tags
                = raw @post.tag_list.map { |t| link_to t, tag_path(t.parameterize) }.join(', ')
            - if @post.editable_by?(current_user)
              %li= link_to raw('<i class="icon-pencil"></i> Edit'), edit_admin_post_path(@post), class: "btn btn-small"
    %hr/
    - if @post.is_commentable
      #comments
        .title-out
          %h3
            = 'Comment'.pluralize(@post.comments.published.count)
            %span.comments-amount
              (#{@post.comments.published.count})
        .comments
          = nested_comments @post.comments.published.arrange(order: "created_at asc")
        / .comments
        .clear
        %hr/
        .title-out
          %h3 Leave a Comment
        #comment_form_prime
          = render "comments/form"
  .span4
    = render "newsletter_signup"
    = render "tag_cloud"
